{"version":3,"file":"static/js/354.16b413a0.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/Searchbar.module.css?defa","components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviesPage.jsx","services/movies-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  \n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Searchbar_searchForm__t5lAY\",\"searchInput\":\"Searchbar_searchInput__iwZ1h\",\"searchButton\":\"Searchbar_searchButton__GsylI\"};","import s from './Searchbar.module.css'\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.searchForm}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n          className={s.searchInput}\n        />\n        <button\n          type=\"submit\"\n          className={s.searchButton}\n        >\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { fetchByQuery } from 'services/movies-api';\nimport MovieList from 'components/MovieList/MovieList';\nimport Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            alert('No movies found!');\n          }\n\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Movie Search'} />\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n\n        <SearchBar onSearch={onSubmit} />\n        {movies && <MovieList movies={movies} prevLocation={location} />}\n      </Container>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n"],"names":["movies","prevLocation","map","id","original_title","to","state","from","PageHeading","text","className","s","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","fetchByQuery","then","results","length","catch","console","log","finally","Container","query","MovieList","API_KEY","axios","END_POINTS","getMovies","page","res","data","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}